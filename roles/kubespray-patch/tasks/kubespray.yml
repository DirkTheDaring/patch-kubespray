- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ kubespray_git_folder }}/bin"
    state: directory
    mode: '0755'

- name: Copy bin files
  ansible.builtin.copy:
    src:  "{{ item }}"
    dest: "{{ kubespray_git_folder }}/{{ item }}"
    mode: '0755'
  loop:
  - bin/kubespray.sh
  - bin/reset.sh

- name: Add patch to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - bin/kubespray.sh
  - bin/reset.sh

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        kubespray.sh which going to be symlinked
        usually not called directly but with a symlink

- name: Create a symbolic link
  ansible.builtin.file:
    src:  "./bin/kubespray.sh"
    dest: "{{ kubespray_git_folder }}/{{ item }}"
    state: link
  loop: "{{ configurations }}"

- name: Create a symbolic link for configuration reset
  ansible.builtin.file:
    src:  "./bin/reset.sh"
    dest: "{{ kubespray_git_folder }}/{{ item }}"
    state: link
  loop: "{{ reset_configurations }}"

- name: Create a symbolic link for configuration upgrade
  ansible.builtin.file:
    src:  "./bin/kubespray.sh"
    dest: "{{ kubespray_git_folder }}/{{ item }}"
    state: link
  loop: "{{ upgrade_configurations }}"

- name: Create a symbolic link for external inventories
  ansible.builtin.file:
    src:  "{{ item.src }}"
    dest: "{{ kubespray_git_folder }}/inventory/{{ item.dest }}"
    state: link
  loop: "{{ external_inventory_configurations }}"

- name: Add patch to git for configurations
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop: "{{ configurations + upgrade_configurations + reset_configurations }}"

#- name: Add patch to git for external_inventory_configurations
#  ansible.builtin.command:
#    chdir: "{{ kubespray_git_folder }}"
#    argv:
#      - git
#      - add
#      - "{{ kubespray_git_folder }}/inventory/{{ item.dest }}"
#  loop: "{{ external_inventory_configurations }}"

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        All symlinks specific to this setup


- name: Patch kubespray for nvidia-operator support
  replace:
      path   : "{{ kubespray_git_folder }}/roles/container-engine/cri-o/templates/crio.conf.j2"
      regexp : "^[ |\t]+\"/usr/share/containers/oci/hooks.d\",$"
      replace: "        \"/etc/containers/oci/hooks.d\", \"/usr/share/containers/oci/hooks.d\","
  when: crio_enabled

- name: Add patch to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/container-engine/cri-o/templates/crio.conf.j2
  when: crio_enabled

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        enable availability of /etc/containers/oci/hooks.d in crio.conf for the nvidia gpu-operator
  when: crio_enabled

# --- a/roles/kubernetes/node/templates/kubelet.env.v1beta1.j2
# +++ b/roles/kubernetes/node/templates/kubelet.env.v1beta1.j2
# @@ -22,6 +22,7 @@ KUBELET_HOSTNAME="--hostname-override={{ kube_override_hostname }}"
#  --dynamic-config-dir={{ dynamic_kubelet_configuration_dir }} \
#  {% endif %}
#  --runtime-cgroups={{ kubelet_runtime_cgroups }} \
# +--kubelet-cgroups={{ kubelet_runtime_cgroups }} \

# Patch /var/run/crio (<=1.24 crio bug)
# https://github.com/ocf/puppet/commit/c436362078f997a86f1c494903f74bf78b2ccdf2
- name: Patch patch path /var/run/crio to /run/crio
  ansible.builtin.replace:
    path: "{{ kubespray_git_folder }}/roles/kubespray-defaults/defaults/main.yaml"
    regexp:  "/var/run/crio/"
    replace: "/run/crio/"
  #when: crio_patch_enabled

- name: Add patch to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/kubespray-defaults/defaults/main.yaml
  #when: crio_patch_enabled

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        Patch /var/run/crio to /run/crio for crio <= 1.24 due the following bug
        https://github.com/ocf/puppet/commit/c436362078f997a86f1c494903f74bf78b2ccdf2
        the CRI-O team found performance issues in the CRI stats provider, so there's
        a hack in kubelet which falls back to cadvisor when crio is being used.
        This is currently broken and causing a bunch of spam in our logs that looks 
        like  "Unable to fetch pod log stats" -- leading to some nodes (like jaws, 
        with a 64G disk) to become NotReady due to disk pressure. 
        This commit works around the above issue by subverting the string check 
        using the fact that `/run` is symlinked to `/var/run`.
  #when: crio_patch_enabled


- name: Patch kubelet.env to remove cadvisor failure reporting in logs
  lineinfile:
    dest:        "{{ kubespray_git_folder }}/roles/kubernetes/node/templates/kubelet.env.v1beta1.j2"
    insertafter: "--runtime-cgroups={% raw %}{{ kubelet_runtime_cgroups }}{% endraw %} \\\\"
    line:        "--kubelet-cgroups={% raw %}{{ kubelet_runtime_cgroups }}{% endraw %} \\"

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/kubernetes/node/templates/kubelet.env.v1beta1.j2

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        avoid a lot of error messages because of cadvisor failure in kubelet

#     - { role: kubernetes-apps/cluster_roles, tags: cluster-roles }
#+    - { role: kubernetes-apps/helm, tags: helm }

- name: Patch cluster.yml for early helm availability
  lineinfile:
    dest:        "{{ kubespray_git_folder }}/cluster.yml"
    insertafter: "    - { role: kubernetes-apps/cluster_roles, tags: cluster-roles }"
    line:        "    - { role: kubernetes-apps/helm, tags: helm }"

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - cluster.yml

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        make helm binary available before we go to network_plugin install

- set_fact:
    file_list:
    - roles/network_plugin/cilium/tasks/apply.yml
    - roles/network_plugin/cilium/tasks/install.yml
    - roles/network_plugin/cilium/templates/cilium-values.yml.j2

- name: Patch files
  ansible.builtin.copy:
    src:  "{{ item | basename }}"
    dest: "{{ kubespray_git_folder }}/{{ item }}"
    mode: 0644
  loop: "{{ file_list }}"

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop: "{{ file_list + [ 'cluster.yml' ] }}"

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        deploy cilium as helm chart

# diff --git a/roles/container-engine/cri-o/tasks/crio_repo.yml b/roles/container-engine/cri-o/tasks/crio_repo.yml
# index f2b1b71a..08bcce17 100644
# --- a/roles/container-engine/cri-o/tasks/crio_repo.yml
# +++ b/roles/container-engine/cri-o/tasks/crio_repo.yml
# @@ -149,7 +149,7 @@
#        section: "fedora-modular"
#
#  - name: Enable CRI-O ex module
# -  command: "rpm-ostree ex module enable cri-o:{{ crio_version }}"
# +  command: "echo rpm-ostree ex module enable cri-o:{{ crio_version }}"
#    become: true
#    when:
#      - is_ostree

- name: Patch kubespray to not enable rpm-ostree module as this is already done
  replace:
      path   : "{{ kubespray_git_folder }}/roles/container-engine/cri-o/tasks/crio_repo.yml"
      regexp : "^  command: \"rpm-ostree ex module enable"
      replace: "  command: \"echo rpm-ostree ex module enable"
  when: crio_patch_enabled

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/container-engine/cri-o/tasks/crio_repo.yml
  when: crio_patch_enabled

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        skip crio module enabling, as this was done elsewhere already
  when: crio_patch_enabled


- name: Patch kubespray crio to not apply patches to storage.conf
  replace:
      path   : "{{ kubespray_git_folder }}/roles/container-engine/cri-o/tasks/main.yaml"
      regexp : "^    dest: /etc/containers/storage.conf"
      replace: "    dest: /etc/containers/storage.conf.kubespray.offline"
  when: crio_patch_enabled


- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/container-engine/cri-o/tasks/main.yaml
  when: crio_patch_enabled

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        disable patching of storage.conf as this prevents cri-o:1.24/default from starting
  when: crio_patch_enabled

- name: Apply patch for supporting etcd as container
  ansible.posix.patch:
    src:  etcd.patch
    basedir: "{{ kubespray_git_folder }}"
    strip: 1

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - roles/download/defaults/main.yml
  - roles/kubernetes/preinstall/tasks/0010-swapoff.yml
  - roles/kubernetes/preinstall/tasks/0080-system-configurations.yml

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        Enable for the etcd to not run in a virtual machine, but run in a lxc container
        as it is provided by proxmox

- name: Apply patch for support of the new ansible version in fedora 37 
  ansible.posix.patch:
    src:  fedora-37-ansible.patch
    basedir: "{{ kubespray_git_folder }}"
    strip: 1

- name: Add them to git
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - add
      - "{{ item }}"
  loop:
  - ansible_version.yml
  - roles/etcd/tasks/gen_nodes_certs_script.yml

- name: Commit patch
  ansible.builtin.command:
    chdir: "{{ kubespray_git_folder }}"
    argv:
      - git
      - commit
      - -m
      - |-
        Support new ansible in fedora 37

